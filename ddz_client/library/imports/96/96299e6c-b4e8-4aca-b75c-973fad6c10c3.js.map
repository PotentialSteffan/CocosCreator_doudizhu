{"version":3,"sources":["../../../../../assets/scripts/util/assets/scripts/util/event_lister.ts"],"names":[],"mappings":";;;;;;AAAA;IAAA;QACI,aAAQ,GAAG,EAAE,CAAA;IAmCjB,CAAC;IAjCG,wBAAE,GAAF,UAAG,IAAI,EAAE,MAAM;QACX,IAAI,IAAI,CAAC,QAAQ,CAAC,cAAc,CAAC,IAAI,CAAC,EAAE;YACpC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,CAAA;SACnC;aAAM;YACH,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,CAAA;SACjC;IACL,CAAC;IAED,0BAAI,GAAJ,UAAK,IAAI,EAAC,IAAI;QACV,IAAI,IAAI,CAAC,QAAQ,CAAC,cAAc,CAAC,IAAI,CAAC,EAAE;YACpC,IAAI,UAAU,GAAG,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAA;YACpC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,UAAU,CAAC,MAAM,EAAE,EAAE,CAAC,EAAE;gBACxC,IAAI,MAAM,GAAG,UAAU,CAAC,CAAC,CAAC,CAAA;gBAC1B,IAAI,IAAI,GAAG,EAAE,CAAA;gBACb,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,SAAS,CAAC,MAAM,EAAE,EAAE,CAAC,EAAE;oBACvC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAA;iBAC1B;gBAED,wBAAwB;gBACxB,OAAO,CAAC,GAAG,CAAC,8BAA8B,GAAG,IAAI,CAAC,CAAA;gBAClD,MAAM,CAAC,KAAK,CAAC,IAAI,EAAE,IAAI,CAAC,CAAA;aAC3B;SACJ;IACL,CAAC;IAED,kCAAY,GAAZ,UAAa,IAAI;QACb,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,GAAG,EAAE,CAAA;IAC5B,CAAC;IAED,qCAAe,GAAf;QACI,IAAI,CAAC,QAAQ,GAAG,EAAE,CAAA;IACtB,CAAC;IAEL,kBAAC;AAAD,CApCA,AAoCC,IAAA","file":"","sourceRoot":"../../../../../assets/scripts/util","sourcesContent":["export default class eventLister {\n    register = {}\n\n    on(type, method) {\n        if (this.register.hasOwnProperty(type)) {\n            this.register[type].push(method)\n        } else {\n            this.register[type] = [method]\n        }\n    }\n\n    fire(type,data) {\n        if (this.register.hasOwnProperty(type)) {\n            var methodList = this.register[type]\n            for (var i = 0; i < methodList.length; ++i) {\n                var handle = methodList[i]\n                var args = []\n                for (var i = 1; i < arguments.length; ++i) {\n                    args.push(arguments[i])\n                }\n\n                //handle.call(this,args)\n                console.log(\"handle.call(this,args) type:\" + type)\n                handle.apply(this, args)\n            }\n        }\n    }\n\n    removeLister(type) {\n        this.register[type] = []\n    }\n\n    removeAllLister() {\n        this.register = {}\n    }\n\n}"]}