{"version":3,"sources":["../../../../../../assets/scripts/gameScene/prefabs/assets/scripts/gameScene/prefabs/card.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"../../../../../../assets/scripts/gameScene/prefabs","sourcesContent":["import myglobal from \"../../mygolbal\"\nimport {RoomState} from '../../defines'\nconst { ccclass, property } = cc._decorator;\n@ccclass\nexport class cards extends cc.Component {\n\n    @property(cc.SpriteAtlas)\n     cards_sprite_atlas: cc.SpriteAtlas = null;\n     flag:boolean\n     offset_y:number\n    onLoad () {\n        this.flag = false\n        this.offset_y = 20\n        \n        this.node.on(\"reset_card_flag\",function(event){\n            if(this.flag==true){\n                this.flag = false\n                this.node.y -= this.offset_y\n            }\n        }.bind(this))\n\n        // this.node.on(\"chu_card_succ\",function(event){\n        //    var chu_card_list = event\n        //    for(var i=0;i<chu_card_list.length;i++){\n        //     if(chu_card_list[i].card_id==this.card_id){\n        //         //this.runToCenter(chu_card_list[i])\n        //         //this.node.destory()\n        //     }\n        //    }\n        // }.bind(this))\n    }\n\n    runToCenter(){\n        //移动到屏幕中间，并带一个牌缩小的效果\n    }\n    start () {\n\n    }\n\n    init_data(data){\n\n    }\n    // update (dt) {},\n    setTouchEvent(){\n        if(this.accountid==myglobal.playerData.accountID){\n            this.node.on(cc.Node.EventType.TOUCH_START,function(event){\n                var gameScene_node = this.node.parent  \n                var room_state = gameScene_node.getComponent(\"gameScene\").roomstate\n                if(room_state==RoomState.ROOM_PLAYING){\n                    console.log(\"TOUCH_START id:\"+this.card_id)\n                    if(this.flag==false){\n                        this.flag = true\n                        this.node.y += this.offset_y\n                        //通知gameui层选定的牌\n                        var carddata = {\n                            \"cardid\":this.card_id,\n                            \"card_data\":this.card_data,\n                        }\n                        gameScene_node.emit(\"choose_card_event\",carddata)\n                    }else{\n                        this.flag=false\n                        this.node.y -= this.offset_y\n                        //通知gameUI取消了那张牌\n                       gameScene_node.emit(\"unchoose_card_event\",this.card_id)\n                    }\n                }\n              \n            }.bind(this))\n        }\n       \n    }\n    card_id\n    card_data\n    accountid\n    showCards(card,accountid){\n        //card.index是服务器生成card给对象设置的一副牌里唯一id\n        this.card_id = card.index\n        //传入参数 card={\"value\":5,\"shape\":1,\"index\":20}\n        this.card_data = card\n        if(accountid){\n            this.accountid = accountid //标识card属于的玩家\n        }\n       \n        //this.node.getComponent(cc.Sprite).spriteFrame = \n        //服务器定义牌的表示\n        // const cardvalue = {\n        //     \"A\": 12,\n        //     \"2\": 13,\n        //     \"3\": 1,\n        //     \"4\": 2,\n        //     \"5\": 3,\n        //     \"6\": 4,\n        //     \"7\": 5,\n        //     \"8\": 6,\n        //     \"9\": 7,\n        //     \"10\": 8,\n        //     \"J\": 9,\n        //     \"Q\": 10,\n        //     \"K\": 11,\n        // }\n        \n       \n        //服务器返回的是key,value对应的是资源的编号\n        const CardValue = {\n            \"12\": 1,\n            \"13\": 2,\n            \"1\": 3,\n            \"2\": 4,\n            \"3\": 5,\n            \"4\": 6,\n            \"5\": 7,\n            \"6\": 8,\n            \"7\": 9,\n            \"8\": 10,\n            \"9\": 11,\n            \"10\": 12,\n            \"11\": 13\n        };\n\n        // 黑桃：spade\n        // 红桃：heart\n        // 梅花：club\n        // 方片：diamond\n        // const CardShape = {\n        //     \"S\": 1,\n        //     \"H\": 2,\n        //     \"C\": 3,\n        //     \"D\": 4,\n        // };\n        const cardShpae = {\n            \"1\": 3,\n            \"2\": 2,\n            \"3\": 1,\n            \"4\": 0\n        };\n        const Kings = {\n            \"14\": 54,\n            \"15\": 53\n        };\n\n        var spriteKey = '';\n        if (card.shape){\n            spriteKey = 'card_' + (cardShpae[card.shape] * 13 + CardValue[card.value]);\n\n        }else {\n            spriteKey = 'card_' + Kings[card.king];\n        }\n\n       // console.log(\"spriteKey\"+spriteKey)\n        this.node.getComponent(cc.Sprite).spriteFrame = this.cards_sprite_atlas.getSpriteFrame(spriteKey)\n        this.setTouchEvent()\n    }\n}\n\n\n"]}