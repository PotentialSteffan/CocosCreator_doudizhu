{"version":3,"sources":["card.js"],"names":["cc","Class","extends","Component","properties","cards_sprite_atlas","SpriteAtlas","onLoad","flag","offset_y","node","on","event","y","bind","runToCenter","start","init_data","data","setTouchEvent","accountid","myglobal","playerData","accountID","Node","EventType","TOUCH_START","gameScene_node","parent","room_state","getComponent","roomstate","RoomState","ROOM_PLAYING","console","log","card_id","carddata","card_data","emit","showCards","card","index","CardValue","cardShpae","Kings","spriteKey","shape","value","king","Sprite","spriteFrame","getSpriteFrame"],"mappings":";;;;;;AAAA;;;;;;AAEAA,GAAGC,KAAH,CAAS;AACLC,aAASF,GAAGG,SADP;;AAGLC,gBAAY;AACXC,4BAAoBL,GAAGM;;AADZ,KAHP;;AAQLC,UARK,oBAQK;AACN,aAAKC,IAAL,GAAY,KAAZ;AACA,aAAKC,QAAL,GAAgB,EAAhB;;AAEA,aAAKC,IAAL,CAAUC,EAAV,CAAa,iBAAb,EAA+B,UAASC,KAAT,EAAe;AAC1C,gBAAG,MAAKJ,QAAM,IAAd,EAAmB;AACf,sBAAKA,OAAO,KAAZ;AACA,qBAAKE,IAAL,CAAUG,CAAV,IAAe,KAAKJ,QAApB;AACH;AACJ,SAL8B,CAK7BK,IAL6B,CAKxB,IALwB,CAA/B;;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACH,KA5BI;AA8BLC,eA9BK,yBA8BQ;AACT;AACH,KAhCI;AAiCLC,SAjCK,mBAiCI,CAER,CAnCI;AAqCLC,aArCK,qBAqCKC,IArCL,EAqCU,CAEd,CAvCI;;AAwCL;AACAC,iBAzCK,2BAyCU;AACX,YAAG,KAAKC,SAAL,IAAgBC,mBAASC,UAAT,CAAoBC,SAAvC,EAAiD;AAC7C,iBAAKb,IAAL,CAAUC,EAAV,CAAaX,GAAGwB,IAAH,CAAQC,SAAR,CAAkBC,WAA/B,EAA2C,UAASd,KAAT,EAAe;AACtD,oBAAIe,iBAAiB,KAAKjB,IAAL,CAAUkB,MAA/B;AACA,oBAAIC,aAAaF,eAAeG,YAAf,CAA4B,WAA5B,EAAyCC,SAA1D;AACA,oBAAGF,cAAYG,UAAUC,YAAzB,EAAsC;AAClCC,4BAAQC,GAAR,CAAY,oBAAkB,KAAKC,OAAnC;AACA,wBAAG,KAAK5B,IAAL,IAAW,KAAd,EAAoB;AAChB,6BAAKA,IAAL,GAAY,IAAZ;AACA,6BAAKE,IAAL,CAAUG,CAAV,IAAe,KAAKJ,QAApB;AACA;AACA,4BAAI4B,WAAW;AACX,sCAAS,KAAKD,OADH;AAEX,yCAAY,KAAKE;AAFN,yBAAf;AAIAX,uCAAeY,IAAf,CAAoB,mBAApB,EAAwCF,QAAxC;AACH,qBATD,MASK;AACD,6BAAK7B,IAAL,GAAU,KAAV;AACA,6BAAKE,IAAL,CAAUG,CAAV,IAAe,KAAKJ,QAApB;AACA;AACDkB,uCAAeY,IAAf,CAAoB,qBAApB,EAA0C,KAAKH,OAA/C;AACF;AACJ;AAEJ,aAtB0C,CAsBzCtB,IAtByC,CAsBpC,IAtBoC,CAA3C;AAuBH;AAEJ,KApEI;AAqEL0B,aArEK,qBAqEKC,IArEL,EAqEUrB,SArEV,EAqEoB;AACrB;AACA,aAAKgB,OAAL,GAAeK,KAAKC,KAApB;AACA;AACA,aAAKJ,SAAL,GAAiBG,IAAjB;AACA,YAAGrB,SAAH,EAAa;AACT,iBAAKA,SAAL,GAAiBA,SAAjB,CADS,CACkB;AAC9B;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA,YAAMuB,YAAY;AACd,kBAAM,CADQ;AAEd,kBAAM,CAFQ;AAGd,iBAAK,CAHS;AAId,iBAAK,CAJS;AAKd,iBAAK,CALS;AAMd,iBAAK,CANS;AAOd,iBAAK,CAPS;AAQd,iBAAK,CARS;AASd,iBAAK,CATS;AAUd,iBAAK,EAVS;AAWd,iBAAK,EAXS;AAYd,kBAAM,EAZQ;AAad,kBAAM;AAbQ,SAAlB;;AAgBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAMC,YAAY;AACd,iBAAK,CADS;AAEd,iBAAK,CAFS;AAGd,iBAAK,CAHS;AAId,iBAAK;AAJS,SAAlB;AAMA,YAAMC,QAAQ;AACV,kBAAM,EADI;AAEV,kBAAM;AAFI,SAAd;;AAKA,YAAIC,YAAY,EAAhB;AACA,YAAIL,KAAKM,KAAT,EAAe;AACXD,wBAAY,WAAWF,UAAUH,KAAKM,KAAf,IAAwB,EAAxB,GAA6BJ,UAAUF,KAAKO,KAAf,CAAxC,CAAZ;AAEH,SAHD,MAGM;AACFF,wBAAY,UAAUD,MAAMJ,KAAKQ,IAAX,CAAtB;AACH;;AAEF;AACC,aAAKvC,IAAL,CAAUoB,YAAV,CAAuB9B,GAAGkD,MAA1B,EAAkCC,WAAlC,GAAgD,KAAK9C,kBAAL,CAAwB+C,cAAxB,CAAuCN,SAAvC,CAAhD;AACA,aAAK3B,aAAL;AACH;AAlJI,CAAT","file":"card.js","sourceRoot":"../../../../../../assets/scripts/gameScene/prefabs","sourcesContent":["import myglobal from \"../../mygolbal.js\"\n\ncc.Class({\n    extends: cc.Component,\n\n    properties: {\n     cards_sprite_atlas: cc.SpriteAtlas,\n     \n    },\n\n    onLoad () {\n        this.flag = false\n        this.offset_y = 20\n        \n        this.node.on(\"reset_card_flag\",function(event){\n            if(this,flag==true){\n                this,flag = false\n                this.node.y -= this.offset_y\n            }\n        }.bind(this))\n\n        // this.node.on(\"chu_card_succ\",function(event){\n        //    var chu_card_list = event\n        //    for(var i=0;i<chu_card_list.length;i++){\n        //     if(chu_card_list[i].card_id==this.card_id){\n        //         //this.runToCenter(chu_card_list[i])\n        //         //this.node.destory()\n        //     }\n        //    }\n        // }.bind(this))\n    },\n\n    runToCenter(){\n        //移动到屏幕中间，并带一个牌缩小的效果\n    },\n    start () {\n\n    },\n\n    init_data(data){\n\n    },\n    // update (dt) {},\n    setTouchEvent(){\n        if(this.accountid==myglobal.playerData.accountID){\n            this.node.on(cc.Node.EventType.TOUCH_START,function(event){\n                var gameScene_node = this.node.parent  \n                var room_state = gameScene_node.getComponent(\"gameScene\").roomstate\n                if(room_state==RoomState.ROOM_PLAYING){\n                    console.log(\"TOUCH_START id:\"+this.card_id)\n                    if(this.flag==false){\n                        this.flag = true\n                        this.node.y += this.offset_y\n                        //通知gameui层选定的牌\n                        var carddata = {\n                            \"cardid\":this.card_id,\n                            \"card_data\":this.card_data,\n                        }\n                        gameScene_node.emit(\"choose_card_event\",carddata)\n                    }else{\n                        this.flag=false\n                        this.node.y -= this.offset_y\n                        //通知gameUI取消了那张牌\n                       gameScene_node.emit(\"unchoose_card_event\",this.card_id)\n                    }\n                }\n              \n            }.bind(this))\n        }\n       \n    },\n    showCards(card,accountid){\n        //card.index是服务器生成card给对象设置的一副牌里唯一id\n        this.card_id = card.index\n        //传入参数 card={\"value\":5,\"shape\":1,\"index\":20}\n        this.card_data = card\n        if(accountid){\n            this.accountid = accountid //标识card属于的玩家\n        }\n       \n        //this.node.getComponent(cc.Sprite).spriteFrame = \n        //服务器定义牌的表示\n        // const cardvalue = {\n        //     \"A\": 12,\n        //     \"2\": 13,\n        //     \"3\": 1,\n        //     \"4\": 2,\n        //     \"5\": 3,\n        //     \"6\": 4,\n        //     \"7\": 5,\n        //     \"8\": 6,\n        //     \"9\": 7,\n        //     \"10\": 8,\n        //     \"J\": 9,\n        //     \"Q\": 10,\n        //     \"K\": 11,\n        // }\n        \n       \n        //服务器返回的是key,value对应的是资源的编号\n        const CardValue = {\n            \"12\": 1,\n            \"13\": 2,\n            \"1\": 3,\n            \"2\": 4,\n            \"3\": 5,\n            \"4\": 6,\n            \"5\": 7,\n            \"6\": 8,\n            \"7\": 9,\n            \"8\": 10,\n            \"9\": 11,\n            \"10\": 12,\n            \"11\": 13\n        };\n\n        // 黑桃：spade\n        // 红桃：heart\n        // 梅花：club\n        // 方片：diamond\n        // const CardShape = {\n        //     \"S\": 1,\n        //     \"H\": 2,\n        //     \"C\": 3,\n        //     \"D\": 4,\n        // };\n        const cardShpae = {\n            \"1\": 3,\n            \"2\": 2,\n            \"3\": 1,\n            \"4\": 0\n        };\n        const Kings = {\n            \"14\": 54,\n            \"15\": 53\n        };\n\n        var spriteKey = '';\n        if (card.shape){\n            spriteKey = 'card_' + (cardShpae[card.shape] * 13 + CardValue[card.value]);\n\n        }else {\n            spriteKey = 'card_' + Kings[card.king];\n        }\n\n       // console.log(\"spriteKey\"+spriteKey)\n        this.node.getComponent(cc.Sprite).spriteFrame = this.cards_sprite_atlas.getSpriteFrame(spriteKey)\n        this.setTouchEvent()\n    }\n});\n\n\n"]}