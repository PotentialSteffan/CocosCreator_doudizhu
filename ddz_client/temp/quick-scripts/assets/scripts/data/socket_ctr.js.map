{"version":3,"sources":["socket_ctr.js"],"names":["socketCtr","that","respone_map","call_index","_socket","event","_sendmsg","cmdtype","req","callindex","emit","cmd","data","_request","callback","console","log","JSON","stringify","initSocket","opts","window","io","connect","defines","serverUrl","on","res","hasOwnProperty","callBackIndex","result","type","fire","request_wxLogin","request_guestLogin","request_creatroom","request_jion","request_enter_room","request_buchu_card","request_chu_card","onPlayerJoinRoom","onPlayerReady","onGameStart","onChangeHouseManage","requestReady","requestStart","requestRobState","state","onPushCards","onCanRobState","onRobState","onChangeMaster","onShowBottomCard","onCanChuCard","onRoomChangeState","onOtherPlayerChuCard"],"mappings":"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","file":"socket_ctr.js","sourceRoot":"../../../../../assets/scripts/data","sourcesContent":["import eventlister from \"../util/event_lister.js\"\n\nconst socketCtr = function(){\n    var that = {}\n    var respone_map = {} \n    var call_index = 0\n\n    var _socket = null\n    var event = eventlister({})\n    const _sendmsg = function(cmdtype,req,callindex){\n        _socket.emit(\"notify\",{cmd:cmdtype,data:req,callindex:callindex})\n    } \n \n    const _request = function(cmdtype,req,callback){\n        console.log(\"send cmd:\"+cmdtype+\"  \"+ JSON.stringify(req))\n        call_index++ \n        respone_map[call_index] = callback\n        _sendmsg(cmdtype,req,call_index)\n    } \n  \n        \n    that.initSocket = function(){\n        var opts = {\n            'reconnection':false,\n            'force new connection': true,\n            'transports':['websocket', 'polling']\n        }\n        _socket = window.io.connect(defines.serverUrl,opts);\n\n        _socket.on(\"connection\",function(){\n            console.log(\"connect server success!!\")\n          })\n\n       _socket.on(\"notify\",function(res){\n         console.log(\"on notify cmd:\" + JSON.stringify(res))\n         if(respone_map.hasOwnProperty(res.callBackIndex)){\n           var callback = respone_map[res.callBackIndex]\n           if(callback){\n               callback(res.result,res.data)\n           }\n          }else{\n           //if(res.callBackIndex!=0){\n           //console.log(\"not found call index\",res.callBackIndex)\n              \n               //提交一个监听的事件给监听器\n        //  on notify cmd:{\"type\":\"player_joinroom_notify\",\"result\":0,\"data\":\n        //  {\"accountid\":\"2586422\",\"nick_name\":\"tiny110\",\"avatarUrl\":\n        //  \"avatar_3\",\"goldcount\":1000,\"seatindex\":2},\"callBackIndex\":null}\n              //没有找到回到函数，就给事件监听器提交一个事件\n              var type = res.type\n              event.fire(type,res.data)\n          // }\n           \n         }\n\n        })\n\n    }\n\n    that.request_wxLogin = function(req,callback){\n        _request(\"wxlogin\",req,callback)\n    }\n    that.request_guestLogin = function(req,callback){\n        _request(\"guestlogin\",req,callback)\n    }\n    \n    that.request_creatroom = function(req,callback){\n        _request(\"createroom_req\",req,callback)\n    }\n\n    that.request_jion = function(req,callback){\n        _request(\"joinroom_req\",req,callback)\n    }\n\n    that.request_enter_room = function(req,callback){\n        _request(\"enterroom_req\",req,callback)\n    }\n\n    //发送不出牌信息\n    that.request_buchu_card =  function(req,callback){\n        _request(\"chu_bu_card_req\",req,callback)\n    }\n    /*玩家出牌\n      需要判断: \n         出的牌是否符合规则\n         和上个出牌玩家比较，是否满足条件\n\n    */\n    that.request_chu_card = function(req,callback){\n        _request(\"chu_card_req\",req,callback)\n    }\n    //监听其他玩家进入房间消息\n    that.onPlayerJoinRoom = function(callback){\n         event.on(\"player_joinroom_notify\",callback)\n    }\n\n    that.onPlayerReady = function(callback){\n        event.on(\"player_ready_notify\",callback)\n    }\n\n    that.onGameStart = function(callback){\n        if(callback){\n           event.on(\"gameStart_notify\",callback)\n        }\n    }\n\n    that.onChangeHouseManage = function(callback){\n        if(callback){\n            event.on(\"changehousemanage_notify\",callback)\n        }\n    }\n    //发送ready消息\n    that.requestReady = function(){\n        _sendmsg(\"player_ready_notify\",{},null)\n    }\n\n    that.requestStart = function(callback){\n        _request(\"player_start_notify\",{},callback)\n    }\n\n    //玩家通知服务器抢地主消息\n    that.requestRobState = function(state){\n        _sendmsg(\"player_rob_notify\",state,null)\n    }\n    //服务器下发牌通知\n    that.onPushCards = function(callback){\n        if(callback){\n            event.on(\"pushcard_notify\",callback)\n         }\n    }\n\n    //监听服务器通知开始抢地主消息\n    that.onCanRobState = function(callback){\n        if(callback){\n            event.on(\"canrob_notify\",callback)\n         }\n    }\n\n    //监听服务器:通知谁抢地主操作消息\n    that.onRobState = function(callback){\n        if(callback){\n            event.on(\"canrob_state_notify\",callback)\n         }\n    }\n\n    //监听服务器:确定地主消息\n    that.onChangeMaster = function(callback){\n        if(callback){\n            event.on(\"change_master_notify\",callback)\n         }\n    }\n\n    //监听服务器:显示底牌消息\n    that.onShowBottomCard = function(callback){\n        if(callback){\n            event.on(\"change_showcard_notify\",callback)\n         }\n    }\n\n    //监听服务器:可以出牌消息\n    that.onCanChuCard = function(callback){\n        if(callback){\n            event.on(\"can_chu_card_notify\",callback)\n        }\n    }\n\n    that.onRoomChangeState = function(callback){\n        if(callback){\n            event.on(\"room_state_notify\",callback)\n        }\n    }\n\n    that.onOtherPlayerChuCard = function(callback){\n        if(callback){\n            event.on(\"other_chucard_notify\",callback)\n        }\n    }\n    return that\n}\n\nexport default socketCtr "]}